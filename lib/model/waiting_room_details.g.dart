// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'waiting_room_details.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

_$WaitingRoomDetailsImpl _$$WaitingRoomDetailsImplFromJson(
        Map<String, dynamic> json) =>
    _$WaitingRoomDetailsImpl(
      deptName: json['deptName'],
      doctorNotes: json['doctorNotes'],
      hospitalId: (json['hospitalId'] as num).toInt(),
      timing: json['timing'],
      hospitalPhoneNumber: json['hospitalPhoneNumber'],
      allergieId: (json['allergieId'] as num).toInt(),
      finding: json['finding'],
      countList: json['countList'],
      allergieName: json['allergieName'],
      doctorId: (json['doctorId'] as num).toInt(),
      testId: (json['testId'] as num).toInt(),
      testCost: (json['testCost'] as num).toInt(),
      doctorName: json['doctorName'],
      alterFlag: json['alterFlag'],
      doctorImage: json['doctorImage'],
      doctorQualification: json['doctorQualification'],
      subCategoryName: json['subCategoryName'],
      typeFlag: json['typeFlag'],
      fileName: json['fileName'],
      testName: json['testName'],
      userName: json['userName'],
      userImage: json['userImage'],
      userAddress: json['userAddress'],
      userBloodgroup: json['userBloodgroup'],
      userDob: json['userDob'],
      emailid: json['emailid'],
      mobileNumber: json['mobileNumber'],
      locationName: json['locationName'],
      hospitalName: json['hospitalName'],
      hospitalAddress: json['hospitalAddress'],
      clinicId: (json['clinicId'] as num).toInt(),
      clinicName: json['clinicName'],
      clinicAddress: json['clinicAddress'],
      cancelFlag: json['cancelFlag'],
      subCategoryId: (json['subCategoryId'] as num).toInt(),
      locationId: (json['locationId'] as num).toInt(),
      clinicDoctorFee: (json['clinicDoctorFee'] as num).toInt(),
      fromTime: json['fromTime'],
      startSplit: (json['startSplit'] as num).toInt(),
      endSplit: (json['endSplit'] as num).toInt(),
      toTime: json['toTime'],
      day: json['day'],
      aboutClinic: json['aboutClinic'],
      clinicImages: json['clinicImages'],
      appointmentDate: json['appointmentDate'],
      appointmentId: (json['appointmentId'] as num).toInt(),
      appointmentTime: json['appointmentTime'],
      confirmStatus: json['confirmStatus'],
      hospitalImages: json['hospitalImages'],
      userId: (json['userId'] as num).toInt(),
      description: json['description'],
      file: json['file'],
      folderDate: json['folderDate'],
      disease: json['disease'],
      allergies: json['allergies'],
      symptoms1: json['symptoms1'],
      symptoms2: json['symptoms2'],
      symptoms3: json['symptoms3'],
      height: json['height'],
      weight: json['weight'],
      temp: json['temp'],
      diabetes: json['diabetes'],
      date: json['date'],
      symptoms: json['symptoms'],
      viewStatus: json['viewStatus'],
      files: json['files'],
      prescription: json['prescription'],
      lab: json['lab'],
      patList: json['patList'],
      summary: json['summary'],
      hosList: json['hosList'],
      total: json['total'],
      waiting: json['waiting'],
      upcoming: json['upcoming'],
      completed: json['completed'],
      dosage: (json['dosage'] as num).toInt(),
      drugName: json['drugName'],
      frequency: json['frequency'],
      duration: (json['duration'] as num).toInt(),
      instruction: json['instruction'],
      notes: json['notes'],
      error: json['error'],
      treatmentDate: json['treatmentDate'],
      treatmentId: (json['treatmentId'] as num).toInt(),
      treatmentName: json['treatmentName'],
      cost: json['cost'],
      days: json['days'],
      discount: json['discount'],
      grantTotal: json['grantTotal'],
      treatment: json['treatment'],
      billDate: json['billDate'],
      billId: (json['billId'] as num).toInt(),
      billName: json['billName'],
      fileType: json['fileType'],
      uploadDate: json['uploadDate'],
      billing: json['billing'],
      labtestDate: json['labtestDate'],
      labtestId: (json['labtestId'] as num).toInt(),
      testCode: json['testCode'],
      labtestName: json['labtestName'],
      labtest: json['labtest'],
      labname: json['labname'],
      appAmount: json['appAmount'],
      eclinicAmount: json['eclinicAmount'],
      serviceAmount: json['serviceAmount'],
      appCount: json['appCount'],
      eclinicCount: json['eclinicCount'],
      serviceCount: json['serviceCount'],
      labId: (json['labId'] as num).toInt(),
      labName: json['labName'],
      jan: json['jan'],
      feb: json['feb'],
      mar: json['mar'],
      apr: json['apr'],
      may: json['may'],
      jun: json['jun'],
      jul: json['jul'],
      aug: json['aug'],
      sep: json['sep'],
      oct: json['oct'],
      nov: json['nov'],
      dec: json['dec'],
      specialization: json['specialization'],
      labResult: json['labResult'],
      paymentFlag: json['paymentFlag'],
      eFlag: json['eFlag'],
      testStatusFlag: json['testStatusFlag'],
      followUpDate: json['followUpDate'],
      followUpTime: json['followUpTime'],
      followUpFlag: json['followUpFlag'],
      sampleFlag: json['sampleFlag'],
      sampleDate: json['sampleDate'],
      resultFlag: json['resultFlag'],
      resultDate: json['resultDate'],
      resultTime: json['resultTime'],
      expectedDate: json['expectedDate'],
      cancelalertHour: (json['cancelalertHour'] as num).toInt(),
      cancelalertNotes: json['cancelalertNotes'],
      nightTime: json['nightTime'],
      afternoonTime: json['afternoonTime'],
      morningTime: json['morningTime'],
      foodInstr: json['foodInstr'],
      presHalfId: json['presHalfId'],
      testResultProperty: json['testResultProperty'],
      approvedStatus: json['approvedStatus'],
      releasedStatus: json['releasedStatus'],
      intakeObject: json['intakeObject'],
      keyId: json['keyId'],
      orderId: json['orderId'],
      confirmMailFlag: json['confirmMailFlag'],
      vitalFlag: json['vitalFlag'],
      tokenNumber: json['tokenNumber'],
      rApp: (json['rApp'] as num).toInt(),
      cApp: (json['cApp'] as num).toInt(),
      oTRequestCount: json['oTRequestCount'],
      iPAppCount: json['iPAppCount'],
      emergrncyAppCount: json['emergrncyAppCount'],
      missed: json['missed'],
      confirmed: json['confirmed'],
      iPWaiting: json['iPWaiting'],
      oTCompleted: json['oTCompleted'],
    );

Map<String, dynamic> _$$WaitingRoomDetailsImplToJson(
        _$WaitingRoomDetailsImpl instance) =>
    <String, dynamic>{
      'deptName': instance.deptName,
      'doctorNotes': instance.doctorNotes,
      'hospitalId': instance.hospitalId,
      'timing': instance.timing,
      'hospitalPhoneNumber': instance.hospitalPhoneNumber,
      'allergieId': instance.allergieId,
      'finding': instance.finding,
      'countList': instance.countList,
      'allergieName': instance.allergieName,
      'doctorId': instance.doctorId,
      'testId': instance.testId,
      'testCost': instance.testCost,
      'doctorName': instance.doctorName,
      'alterFlag': instance.alterFlag,
      'doctorImage': instance.doctorImage,
      'doctorQualification': instance.doctorQualification,
      'subCategoryName': instance.subCategoryName,
      'typeFlag': instance.typeFlag,
      'fileName': instance.fileName,
      'testName': instance.testName,
      'userName': instance.userName,
      'userImage': instance.userImage,
      'userAddress': instance.userAddress,
      'userBloodgroup': instance.userBloodgroup,
      'userDob': instance.userDob,
      'emailid': instance.emailid,
      'mobileNumber': instance.mobileNumber,
      'locationName': instance.locationName,
      'hospitalName': instance.hospitalName,
      'hospitalAddress': instance.hospitalAddress,
      'clinicId': instance.clinicId,
      'clinicName': instance.clinicName,
      'clinicAddress': instance.clinicAddress,
      'cancelFlag': instance.cancelFlag,
      'subCategoryId': instance.subCategoryId,
      'locationId': instance.locationId,
      'clinicDoctorFee': instance.clinicDoctorFee,
      'fromTime': instance.fromTime,
      'startSplit': instance.startSplit,
      'endSplit': instance.endSplit,
      'toTime': instance.toTime,
      'day': instance.day,
      'aboutClinic': instance.aboutClinic,
      'clinicImages': instance.clinicImages,
      'appointmentDate': instance.appointmentDate,
      'appointmentId': instance.appointmentId,
      'appointmentTime': instance.appointmentTime,
      'confirmStatus': instance.confirmStatus,
      'hospitalImages': instance.hospitalImages,
      'userId': instance.userId,
      'description': instance.description,
      'file': instance.file,
      'folderDate': instance.folderDate,
      'disease': instance.disease,
      'allergies': instance.allergies,
      'symptoms1': instance.symptoms1,
      'symptoms2': instance.symptoms2,
      'symptoms3': instance.symptoms3,
      'height': instance.height,
      'weight': instance.weight,
      'temp': instance.temp,
      'diabetes': instance.diabetes,
      'date': instance.date,
      'symptoms': instance.symptoms,
      'viewStatus': instance.viewStatus,
      'files': instance.files,
      'prescription': instance.prescription,
      'lab': instance.lab,
      'patList': instance.patList,
      'summary': instance.summary,
      'hosList': instance.hosList,
      'total': instance.total,
      'waiting': instance.waiting,
      'upcoming': instance.upcoming,
      'completed': instance.completed,
      'dosage': instance.dosage,
      'drugName': instance.drugName,
      'frequency': instance.frequency,
      'duration': instance.duration,
      'instruction': instance.instruction,
      'notes': instance.notes,
      'error': instance.error,
      'treatmentDate': instance.treatmentDate,
      'treatmentId': instance.treatmentId,
      'treatmentName': instance.treatmentName,
      'cost': instance.cost,
      'days': instance.days,
      'discount': instance.discount,
      'grantTotal': instance.grantTotal,
      'treatment': instance.treatment,
      'billDate': instance.billDate,
      'billId': instance.billId,
      'billName': instance.billName,
      'fileType': instance.fileType,
      'uploadDate': instance.uploadDate,
      'billing': instance.billing,
      'labtestDate': instance.labtestDate,
      'labtestId': instance.labtestId,
      'testCode': instance.testCode,
      'labtestName': instance.labtestName,
      'labtest': instance.labtest,
      'labname': instance.labname,
      'appAmount': instance.appAmount,
      'eclinicAmount': instance.eclinicAmount,
      'serviceAmount': instance.serviceAmount,
      'appCount': instance.appCount,
      'eclinicCount': instance.eclinicCount,
      'serviceCount': instance.serviceCount,
      'labId': instance.labId,
      'labName': instance.labName,
      'jan': instance.jan,
      'feb': instance.feb,
      'mar': instance.mar,
      'apr': instance.apr,
      'may': instance.may,
      'jun': instance.jun,
      'jul': instance.jul,
      'aug': instance.aug,
      'sep': instance.sep,
      'oct': instance.oct,
      'nov': instance.nov,
      'dec': instance.dec,
      'specialization': instance.specialization,
      'labResult': instance.labResult,
      'paymentFlag': instance.paymentFlag,
      'eFlag': instance.eFlag,
      'testStatusFlag': instance.testStatusFlag,
      'followUpDate': instance.followUpDate,
      'followUpTime': instance.followUpTime,
      'followUpFlag': instance.followUpFlag,
      'sampleFlag': instance.sampleFlag,
      'sampleDate': instance.sampleDate,
      'resultFlag': instance.resultFlag,
      'resultDate': instance.resultDate,
      'resultTime': instance.resultTime,
      'expectedDate': instance.expectedDate,
      'cancelalertHour': instance.cancelalertHour,
      'cancelalertNotes': instance.cancelalertNotes,
      'nightTime': instance.nightTime,
      'afternoonTime': instance.afternoonTime,
      'morningTime': instance.morningTime,
      'foodInstr': instance.foodInstr,
      'presHalfId': instance.presHalfId,
      'testResultProperty': instance.testResultProperty,
      'approvedStatus': instance.approvedStatus,
      'releasedStatus': instance.releasedStatus,
      'intakeObject': instance.intakeObject,
      'keyId': instance.keyId,
      'orderId': instance.orderId,
      'confirmMailFlag': instance.confirmMailFlag,
      'vitalFlag': instance.vitalFlag,
      'tokenNumber': instance.tokenNumber,
      'rApp': instance.rApp,
      'cApp': instance.cApp,
      'oTRequestCount': instance.oTRequestCount,
      'iPAppCount': instance.iPAppCount,
      'emergrncyAppCount': instance.emergrncyAppCount,
      'missed': instance.missed,
      'confirmed': instance.confirmed,
      'iPWaiting': instance.iPWaiting,
      'oTCompleted': instance.oTCompleted,
    };
